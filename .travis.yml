language: minimal
os: linux

services:
- docker

install:
- docker pull golang:alpine
- docker network create smoke
- |
    function assert_content() {
        GOT=`curl $1`;
        EXPECTED="$2";
        
        if [ "$GOT" == "$EXPECTED" ]; then
            echo -e "\033[0;32m[PASS]\033[0m $1: $GOT";
            return 0;
        else
            echo -e "\033[0;31m[FAIL]\033[0m $1: $GOT (expected $EXPECTED)"; 
            return 1;
        fi;
    }

# build & test the echoserver
before_script:

# build echo and bring it up
- cd testserver
- docker build -t tkw1536/echo .
- docker run -d --name=echosmoke --network=smoke -p 8081:8080 tkw1536/echo
- sleep 10

# check that the path is echoed
- assert_content "http://localhost:8081/" "/" 
- assert_content "http://localhost:8081/path/" "/path/"

# stop echosmoke
- docker stop echosmoke
- cd ..

script:
# build tp and bring it up
- docker build -t tkw1536/tp .
- docker run -d --name=smoke --network=smoke -p 8080:8080 -e TARGET=http://echosmoke:8080 tkw1536/tp
- sleep 10

# without echosmoke running, it should be empty
- assert_content "http://localhost:8080/" "" 
- assert_content "http://localhost:8080/path/" ""

# bring up echosmoke
- docker start echosmoke
- sleep 10

# with it, it should echo the path
- assert_content "http://localhost:8080/" "/" 
- assert_content "http://localhost:8080/path/" "/path/"

after_script:
- docker stop smoke
- docker stop echosmoke

